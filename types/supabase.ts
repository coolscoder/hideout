/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/bookmarks": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookmarks.id"];
          created_at?: parameters["rowFilter.bookmarks.created_at"];
          uuid?: parameters["rowFilter.bookmarks.uuid"];
          post_uuid?: parameters["rowFilter.bookmarks.post_uuid"];
          user_uuid?: parameters["rowFilter.bookmarks.user_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["bookmarks"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** bookmarks */
          bookmarks?: definitions["bookmarks"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookmarks.id"];
          created_at?: parameters["rowFilter.bookmarks.created_at"];
          uuid?: parameters["rowFilter.bookmarks.uuid"];
          post_uuid?: parameters["rowFilter.bookmarks.post_uuid"];
          user_uuid?: parameters["rowFilter.bookmarks.user_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.bookmarks.id"];
          created_at?: parameters["rowFilter.bookmarks.created_at"];
          uuid?: parameters["rowFilter.bookmarks.uuid"];
          post_uuid?: parameters["rowFilter.bookmarks.post_uuid"];
          user_uuid?: parameters["rowFilter.bookmarks.user_uuid"];
        };
        body: {
          /** bookmarks */
          bookmarks?: definitions["bookmarks"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/brands": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          uuid?: parameters["rowFilter.brands.uuid"];
          website?: parameters["rowFilter.brands.website"];
          industry?: parameters["rowFilter.brands.industry"];
          location?: parameters["rowFilter.brands.location"];
          founded?: parameters["rowFilter.brands.founded"];
          size?: parameters["rowFilter.brands.size"];
          description?: parameters["rowFilter.brands.description"];
          name?: parameters["rowFilter.brands.name"];
          thumbnail?: parameters["rowFilter.brands.thumbnail"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["brands"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** brands */
          brands?: definitions["brands"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          uuid?: parameters["rowFilter.brands.uuid"];
          website?: parameters["rowFilter.brands.website"];
          industry?: parameters["rowFilter.brands.industry"];
          location?: parameters["rowFilter.brands.location"];
          founded?: parameters["rowFilter.brands.founded"];
          size?: parameters["rowFilter.brands.size"];
          description?: parameters["rowFilter.brands.description"];
          name?: parameters["rowFilter.brands.name"];
          thumbnail?: parameters["rowFilter.brands.thumbnail"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.brands.id"];
          created_at?: parameters["rowFilter.brands.created_at"];
          uuid?: parameters["rowFilter.brands.uuid"];
          website?: parameters["rowFilter.brands.website"];
          industry?: parameters["rowFilter.brands.industry"];
          location?: parameters["rowFilter.brands.location"];
          founded?: parameters["rowFilter.brands.founded"];
          size?: parameters["rowFilter.brands.size"];
          description?: parameters["rowFilter.brands.description"];
          name?: parameters["rowFilter.brands.name"];
          thumbnail?: parameters["rowFilter.brands.thumbnail"];
        };
        body: {
          /** brands */
          brands?: definitions["brands"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/comment_like": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comment_like.id"];
          created_at?: parameters["rowFilter.comment_like.created_at"];
          uuid?: parameters["rowFilter.comment_like.uuid"];
          user_uuid?: parameters["rowFilter.comment_like.user_uuid"];
          comment_uuid?: parameters["rowFilter.comment_like.comment_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comment_like"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** comment_like */
          comment_like?: definitions["comment_like"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comment_like.id"];
          created_at?: parameters["rowFilter.comment_like.created_at"];
          uuid?: parameters["rowFilter.comment_like.uuid"];
          user_uuid?: parameters["rowFilter.comment_like.user_uuid"];
          comment_uuid?: parameters["rowFilter.comment_like.comment_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comment_like.id"];
          created_at?: parameters["rowFilter.comment_like.created_at"];
          uuid?: parameters["rowFilter.comment_like.uuid"];
          user_uuid?: parameters["rowFilter.comment_like.user_uuid"];
          comment_uuid?: parameters["rowFilter.comment_like.comment_uuid"];
        };
        body: {
          /** comment_like */
          comment_like?: definitions["comment_like"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/comments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          uuid?: parameters["rowFilter.comments.uuid"];
          text?: parameters["rowFilter.comments.text"];
          post_uuid?: parameters["rowFilter.comments.post_uuid"];
          user_uuid?: parameters["rowFilter.comments.user_uuid"];
          parent_uuid?: parameters["rowFilter.comments.parent_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          uuid?: parameters["rowFilter.comments.uuid"];
          text?: parameters["rowFilter.comments.text"];
          post_uuid?: parameters["rowFilter.comments.post_uuid"];
          user_uuid?: parameters["rowFilter.comments.user_uuid"];
          parent_uuid?: parameters["rowFilter.comments.parent_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          uuid?: parameters["rowFilter.comments.uuid"];
          text?: parameters["rowFilter.comments.text"];
          post_uuid?: parameters["rowFilter.comments.post_uuid"];
          user_uuid?: parameters["rowFilter.comments.user_uuid"];
          parent_uuid?: parameters["rowFilter.comments.parent_uuid"];
        };
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/compensations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.compensations.id"];
          created_at?: parameters["rowFilter.compensations.created_at"];
          uuid?: parameters["rowFilter.compensations.uuid"];
          amount?: parameters["rowFilter.compensations.amount"];
          user_uuid?: parameters["rowFilter.compensations.user_uuid"];
          brand_uuid?: parameters["rowFilter.compensations.brand_uuid"];
          verified?: parameters["rowFilter.compensations.verified"];
          type?: parameters["rowFilter.compensations.type"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["compensations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** compensations */
          compensations?: definitions["compensations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.compensations.id"];
          created_at?: parameters["rowFilter.compensations.created_at"];
          uuid?: parameters["rowFilter.compensations.uuid"];
          amount?: parameters["rowFilter.compensations.amount"];
          user_uuid?: parameters["rowFilter.compensations.user_uuid"];
          brand_uuid?: parameters["rowFilter.compensations.brand_uuid"];
          verified?: parameters["rowFilter.compensations.verified"];
          type?: parameters["rowFilter.compensations.type"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.compensations.id"];
          created_at?: parameters["rowFilter.compensations.created_at"];
          uuid?: parameters["rowFilter.compensations.uuid"];
          amount?: parameters["rowFilter.compensations.amount"];
          user_uuid?: parameters["rowFilter.compensations.user_uuid"];
          brand_uuid?: parameters["rowFilter.compensations.brand_uuid"];
          verified?: parameters["rowFilter.compensations.verified"];
          type?: parameters["rowFilter.compensations.type"];
        };
        body: {
          /** compensations */
          compensations?: definitions["compensations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/helpfuls": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.helpfuls.id"];
          created_at?: parameters["rowFilter.helpfuls.created_at"];
          uuid?: parameters["rowFilter.helpfuls.uuid"];
          user_uuid?: parameters["rowFilter.helpfuls.user_uuid"];
          review_uuid?: parameters["rowFilter.helpfuls.review_uuid"];
          was_helpful?: parameters["rowFilter.helpfuls.was_helpful"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["helpfuls"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** helpfuls */
          helpfuls?: definitions["helpfuls"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.helpfuls.id"];
          created_at?: parameters["rowFilter.helpfuls.created_at"];
          uuid?: parameters["rowFilter.helpfuls.uuid"];
          user_uuid?: parameters["rowFilter.helpfuls.user_uuid"];
          review_uuid?: parameters["rowFilter.helpfuls.review_uuid"];
          was_helpful?: parameters["rowFilter.helpfuls.was_helpful"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.helpfuls.id"];
          created_at?: parameters["rowFilter.helpfuls.created_at"];
          uuid?: parameters["rowFilter.helpfuls.uuid"];
          user_uuid?: parameters["rowFilter.helpfuls.user_uuid"];
          review_uuid?: parameters["rowFilter.helpfuls.review_uuid"];
          was_helpful?: parameters["rowFilter.helpfuls.was_helpful"];
        };
        body: {
          /** helpfuls */
          helpfuls?: definitions["helpfuls"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/new_feature_requests": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_feature_requests.id"];
          created_at?: parameters["rowFilter.new_feature_requests.created_at"];
          user_uuid?: parameters["rowFilter.new_feature_requests.user_uuid"];
          text?: parameters["rowFilter.new_feature_requests.text"];
          uuid?: parameters["rowFilter.new_feature_requests.uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["new_feature_requests"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** new_feature_requests */
          new_feature_requests?: definitions["new_feature_requests"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_feature_requests.id"];
          created_at?: parameters["rowFilter.new_feature_requests.created_at"];
          user_uuid?: parameters["rowFilter.new_feature_requests.user_uuid"];
          text?: parameters["rowFilter.new_feature_requests.text"];
          uuid?: parameters["rowFilter.new_feature_requests.uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_feature_requests.id"];
          created_at?: parameters["rowFilter.new_feature_requests.created_at"];
          user_uuid?: parameters["rowFilter.new_feature_requests.user_uuid"];
          text?: parameters["rowFilter.new_feature_requests.text"];
          uuid?: parameters["rowFilter.new_feature_requests.uuid"];
        };
        body: {
          /** new_feature_requests */
          new_feature_requests?: definitions["new_feature_requests"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/new_topic_request": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_topic_request.id"];
          created_at?: parameters["rowFilter.new_topic_request.created_at"];
          uuid?: parameters["rowFilter.new_topic_request.uuid"];
          user_uuid?: parameters["rowFilter.new_topic_request.user_uuid"];
          text?: parameters["rowFilter.new_topic_request.text"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["new_topic_request"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** new_topic_request */
          new_topic_request?: definitions["new_topic_request"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_topic_request.id"];
          created_at?: parameters["rowFilter.new_topic_request.created_at"];
          uuid?: parameters["rowFilter.new_topic_request.uuid"];
          user_uuid?: parameters["rowFilter.new_topic_request.user_uuid"];
          text?: parameters["rowFilter.new_topic_request.text"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.new_topic_request.id"];
          created_at?: parameters["rowFilter.new_topic_request.created_at"];
          uuid?: parameters["rowFilter.new_topic_request.uuid"];
          user_uuid?: parameters["rowFilter.new_topic_request.user_uuid"];
          text?: parameters["rowFilter.new_topic_request.text"];
        };
        body: {
          /** new_topic_request */
          new_topic_request?: definitions["new_topic_request"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/niches": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.niches.id"];
          created_at?: parameters["rowFilter.niches.created_at"];
          name?: parameters["rowFilter.niches.name"];
          uuid?: parameters["rowFilter.niches.uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["niches"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** niches */
          niches?: definitions["niches"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.niches.id"];
          created_at?: parameters["rowFilter.niches.created_at"];
          name?: parameters["rowFilter.niches.name"];
          uuid?: parameters["rowFilter.niches.uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.niches.id"];
          created_at?: parameters["rowFilter.niches.created_at"];
          name?: parameters["rowFilter.niches.name"];
          uuid?: parameters["rowFilter.niches.uuid"];
        };
        body: {
          /** niches */
          niches?: definitions["niches"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/notifications": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          created_at?: parameters["rowFilter.notifications.created_at"];
          uuid?: parameters["rowFilter.notifications.uuid"];
          viewed?: parameters["rowFilter.notifications.viewed"];
          user_uuid?: parameters["rowFilter.notifications.user_uuid"];
          post_uuid?: parameters["rowFilter.notifications.post_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["notifications"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** notifications */
          notifications?: definitions["notifications"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          created_at?: parameters["rowFilter.notifications.created_at"];
          uuid?: parameters["rowFilter.notifications.uuid"];
          viewed?: parameters["rowFilter.notifications.viewed"];
          user_uuid?: parameters["rowFilter.notifications.user_uuid"];
          post_uuid?: parameters["rowFilter.notifications.post_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.notifications.id"];
          created_at?: parameters["rowFilter.notifications.created_at"];
          uuid?: parameters["rowFilter.notifications.uuid"];
          viewed?: parameters["rowFilter.notifications.viewed"];
          user_uuid?: parameters["rowFilter.notifications.user_uuid"];
          post_uuid?: parameters["rowFilter.notifications.post_uuid"];
        };
        body: {
          /** notifications */
          notifications?: definitions["notifications"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/post_like": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.post_like.id"];
          created_at?: parameters["rowFilter.post_like.created_at"];
          uuid?: parameters["rowFilter.post_like.uuid"];
          user_uuid?: parameters["rowFilter.post_like.user_uuid"];
          post_uuid?: parameters["rowFilter.post_like.post_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["post_like"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** post_like */
          post_like?: definitions["post_like"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.post_like.id"];
          created_at?: parameters["rowFilter.post_like.created_at"];
          uuid?: parameters["rowFilter.post_like.uuid"];
          user_uuid?: parameters["rowFilter.post_like.user_uuid"];
          post_uuid?: parameters["rowFilter.post_like.post_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.post_like.id"];
          created_at?: parameters["rowFilter.post_like.created_at"];
          uuid?: parameters["rowFilter.post_like.uuid"];
          user_uuid?: parameters["rowFilter.post_like.user_uuid"];
          post_uuid?: parameters["rowFilter.post_like.post_uuid"];
        };
        body: {
          /** post_like */
          post_like?: definitions["post_like"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/posts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          created_at?: parameters["rowFilter.posts.created_at"];
          title?: parameters["rowFilter.posts.title"];
          description?: parameters["rowFilter.posts.description"];
          type?: parameters["rowFilter.posts.type"];
          views?: parameters["rowFilter.posts.views"];
          options?: parameters["rowFilter.posts.options"];
          uuid?: parameters["rowFilter.posts.uuid"];
          user?: parameters["rowFilter.posts.user"];
          image?: parameters["rowFilter.posts.image"];
          url?: parameters["rowFilter.posts.url"];
          topic?: parameters["rowFilter.posts.topic"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["posts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          created_at?: parameters["rowFilter.posts.created_at"];
          title?: parameters["rowFilter.posts.title"];
          description?: parameters["rowFilter.posts.description"];
          type?: parameters["rowFilter.posts.type"];
          views?: parameters["rowFilter.posts.views"];
          options?: parameters["rowFilter.posts.options"];
          uuid?: parameters["rowFilter.posts.uuid"];
          user?: parameters["rowFilter.posts.user"];
          image?: parameters["rowFilter.posts.image"];
          url?: parameters["rowFilter.posts.url"];
          topic?: parameters["rowFilter.posts.topic"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          created_at?: parameters["rowFilter.posts.created_at"];
          title?: parameters["rowFilter.posts.title"];
          description?: parameters["rowFilter.posts.description"];
          type?: parameters["rowFilter.posts.type"];
          views?: parameters["rowFilter.posts.views"];
          options?: parameters["rowFilter.posts.options"];
          uuid?: parameters["rowFilter.posts.uuid"];
          user?: parameters["rowFilter.posts.user"];
          image?: parameters["rowFilter.posts.image"];
          url?: parameters["rowFilter.posts.url"];
          topic?: parameters["rowFilter.posts.topic"];
        };
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/posts_related_brands": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts_related_brands.id"];
          created_at?: parameters["rowFilter.posts_related_brands.created_at"];
          uuid?: parameters["rowFilter.posts_related_brands.uuid"];
          post?: parameters["rowFilter.posts_related_brands.post"];
          brand?: parameters["rowFilter.posts_related_brands.brand"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["posts_related_brands"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** posts_related_brands */
          posts_related_brands?: definitions["posts_related_brands"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts_related_brands.id"];
          created_at?: parameters["rowFilter.posts_related_brands.created_at"];
          uuid?: parameters["rowFilter.posts_related_brands.uuid"];
          post?: parameters["rowFilter.posts_related_brands.post"];
          brand?: parameters["rowFilter.posts_related_brands.brand"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts_related_brands.id"];
          created_at?: parameters["rowFilter.posts_related_brands.created_at"];
          uuid?: parameters["rowFilter.posts_related_brands.uuid"];
          post?: parameters["rowFilter.posts_related_brands.post"];
          brand?: parameters["rowFilter.posts_related_brands.brand"];
        };
        body: {
          /** posts_related_brands */
          posts_related_brands?: definitions["posts_related_brands"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/reviews": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          uuid?: parameters["rowFilter.reviews.uuid"];
          brand?: parameters["rowFilter.reviews.brand"];
          overrall_rating?: parameters["rowFilter.reviews.overrall_rating"];
          title?: parameters["rowFilter.reviews.title"];
          pros?: parameters["rowFilter.reviews.pros"];
          cons?: parameters["rowFilter.reviews.cons"];
          compensation_rating?: parameters["rowFilter.reviews.compensation_rating"];
          easy_to_work_with_rating?: parameters["rowFilter.reviews.easy_to_work_with_rating"];
          responsive_rating?: parameters["rowFilter.reviews.responsive_rating"];
          user?: parameters["rowFilter.reviews.user"];
          compensation?: parameters["rowFilter.reviews.compensation"];
          received_free_product?: parameters["rowFilter.reviews.received_free_product"];
          equity?: parameters["rowFilter.reviews.equity"];
          number_of_followers?: parameters["rowFilter.reviews.number_of_followers"];
          number_of_posts?: parameters["rowFilter.reviews.number_of_posts"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["reviews"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** reviews */
          reviews?: definitions["reviews"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          uuid?: parameters["rowFilter.reviews.uuid"];
          brand?: parameters["rowFilter.reviews.brand"];
          overrall_rating?: parameters["rowFilter.reviews.overrall_rating"];
          title?: parameters["rowFilter.reviews.title"];
          pros?: parameters["rowFilter.reviews.pros"];
          cons?: parameters["rowFilter.reviews.cons"];
          compensation_rating?: parameters["rowFilter.reviews.compensation_rating"];
          easy_to_work_with_rating?: parameters["rowFilter.reviews.easy_to_work_with_rating"];
          responsive_rating?: parameters["rowFilter.reviews.responsive_rating"];
          user?: parameters["rowFilter.reviews.user"];
          compensation?: parameters["rowFilter.reviews.compensation"];
          received_free_product?: parameters["rowFilter.reviews.received_free_product"];
          equity?: parameters["rowFilter.reviews.equity"];
          number_of_followers?: parameters["rowFilter.reviews.number_of_followers"];
          number_of_posts?: parameters["rowFilter.reviews.number_of_posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.reviews.id"];
          created_at?: parameters["rowFilter.reviews.created_at"];
          uuid?: parameters["rowFilter.reviews.uuid"];
          brand?: parameters["rowFilter.reviews.brand"];
          overrall_rating?: parameters["rowFilter.reviews.overrall_rating"];
          title?: parameters["rowFilter.reviews.title"];
          pros?: parameters["rowFilter.reviews.pros"];
          cons?: parameters["rowFilter.reviews.cons"];
          compensation_rating?: parameters["rowFilter.reviews.compensation_rating"];
          easy_to_work_with_rating?: parameters["rowFilter.reviews.easy_to_work_with_rating"];
          responsive_rating?: parameters["rowFilter.reviews.responsive_rating"];
          user?: parameters["rowFilter.reviews.user"];
          compensation?: parameters["rowFilter.reviews.compensation"];
          received_free_product?: parameters["rowFilter.reviews.received_free_product"];
          equity?: parameters["rowFilter.reviews.equity"];
          number_of_followers?: parameters["rowFilter.reviews.number_of_followers"];
          number_of_posts?: parameters["rowFilter.reviews.number_of_posts"];
        };
        body: {
          /** reviews */
          reviews?: definitions["reviews"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/topics": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.topics.id"];
          created_at?: parameters["rowFilter.topics.created_at"];
          name?: parameters["rowFilter.topics.name"];
          uuid?: parameters["rowFilter.topics.uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["topics"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** topics */
          topics?: definitions["topics"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.topics.id"];
          created_at?: parameters["rowFilter.topics.created_at"];
          name?: parameters["rowFilter.topics.name"];
          uuid?: parameters["rowFilter.topics.uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.topics.id"];
          created_at?: parameters["rowFilter.topics.created_at"];
          name?: parameters["rowFilter.topics.name"];
          uuid?: parameters["rowFilter.topics.uuid"];
        };
        body: {
          /** topics */
          topics?: definitions["topics"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_niches": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_niches.id"];
          created_at?: parameters["rowFilter.user_niches.created_at"];
          user?: parameters["rowFilter.user_niches.user"];
          niche?: parameters["rowFilter.user_niches.niche"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_niches"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_niches */
          user_niches?: definitions["user_niches"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_niches.id"];
          created_at?: parameters["rowFilter.user_niches.created_at"];
          user?: parameters["rowFilter.user_niches.user"];
          niche?: parameters["rowFilter.user_niches.niche"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_niches.id"];
          created_at?: parameters["rowFilter.user_niches.created_at"];
          user?: parameters["rowFilter.user_niches.user"];
          niche?: parameters["rowFilter.user_niches.niche"];
        };
        body: {
          /** user_niches */
          user_niches?: definitions["user_niches"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_topics": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_topics.id"];
          created_at?: parameters["rowFilter.user_topics.created_at"];
          topic?: parameters["rowFilter.user_topics.topic"];
          user?: parameters["rowFilter.user_topics.user"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_topics"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_topics */
          user_topics?: definitions["user_topics"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_topics.id"];
          created_at?: parameters["rowFilter.user_topics.created_at"];
          topic?: parameters["rowFilter.user_topics.topic"];
          user?: parameters["rowFilter.user_topics.user"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_topics.id"];
          created_at?: parameters["rowFilter.user_topics.created_at"];
          topic?: parameters["rowFilter.user_topics.topic"];
          user?: parameters["rowFilter.user_topics.user"];
        };
        body: {
          /** user_topics */
          user_topics?: definitions["user_topics"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          uuid?: parameters["rowFilter.users.uuid"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          screen_name?: parameters["rowFilter.users.screen_name"];
          verified?: parameters["rowFilter.users.verified"];
          follower_count?: parameters["rowFilter.users.follower_count"];
          location?: parameters["rowFilter.users.location"];
          bio?: parameters["rowFilter.users.bio"];
          years_of_exp?: parameters["rowFilter.users.years_of_exp"];
          id?: parameters["rowFilter.users.id"];
          enable_push_notifications?: parameters["rowFilter.users.enable_push_notifications"];
          push_blind_updates?: parameters["rowFilter.users.push_blind_updates"];
          push_new_messages?: parameters["rowFilter.users.push_new_messages"];
          push_new_comments?: parameters["rowFilter.users.push_new_comments"];
          push_posts?: parameters["rowFilter.users.push_posts"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          uuid?: parameters["rowFilter.users.uuid"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          screen_name?: parameters["rowFilter.users.screen_name"];
          verified?: parameters["rowFilter.users.verified"];
          follower_count?: parameters["rowFilter.users.follower_count"];
          location?: parameters["rowFilter.users.location"];
          bio?: parameters["rowFilter.users.bio"];
          years_of_exp?: parameters["rowFilter.users.years_of_exp"];
          id?: parameters["rowFilter.users.id"];
          enable_push_notifications?: parameters["rowFilter.users.enable_push_notifications"];
          push_blind_updates?: parameters["rowFilter.users.push_blind_updates"];
          push_new_messages?: parameters["rowFilter.users.push_new_messages"];
          push_new_comments?: parameters["rowFilter.users.push_new_comments"];
          push_posts?: parameters["rowFilter.users.push_posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          uuid?: parameters["rowFilter.users.uuid"];
          created_at?: parameters["rowFilter.users.created_at"];
          email?: parameters["rowFilter.users.email"];
          screen_name?: parameters["rowFilter.users.screen_name"];
          verified?: parameters["rowFilter.users.verified"];
          follower_count?: parameters["rowFilter.users.follower_count"];
          location?: parameters["rowFilter.users.location"];
          bio?: parameters["rowFilter.users.bio"];
          years_of_exp?: parameters["rowFilter.users.years_of_exp"];
          id?: parameters["rowFilter.users.id"];
          enable_push_notifications?: parameters["rowFilter.users.enable_push_notifications"];
          push_blind_updates?: parameters["rowFilter.users.push_blind_updates"];
          push_new_messages?: parameters["rowFilter.users.push_new_messages"];
          push_new_comments?: parameters["rowFilter.users.push_new_comments"];
          push_posts?: parameters["rowFilter.users.push_posts"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/votes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.votes.id"];
          created_at?: parameters["rowFilter.votes.created_at"];
          uuid?: parameters["rowFilter.votes.uuid"];
          choice?: parameters["rowFilter.votes.choice"];
          user_uuid?: parameters["rowFilter.votes.user_uuid"];
          post_uuid?: parameters["rowFilter.votes.post_uuid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["votes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.votes.id"];
          created_at?: parameters["rowFilter.votes.created_at"];
          uuid?: parameters["rowFilter.votes.uuid"];
          choice?: parameters["rowFilter.votes.choice"];
          user_uuid?: parameters["rowFilter.votes.user_uuid"];
          post_uuid?: parameters["rowFilter.votes.post_uuid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.votes.id"];
          created_at?: parameters["rowFilter.votes.created_at"];
          uuid?: parameters["rowFilter.votes.uuid"];
          choice?: parameters["rowFilter.votes.choice"];
          user_uuid?: parameters["rowFilter.votes.user_uuid"];
          post_uuid?: parameters["rowFilter.votes.post_uuid"];
        };
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/would_work_with": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.would_work_with.id"];
          created_at?: parameters["rowFilter.would_work_with.created_at"];
          uuid?: parameters["rowFilter.would_work_with.uuid"];
          user_uuid?: parameters["rowFilter.would_work_with.user_uuid"];
          brand_uuid?: parameters["rowFilter.would_work_with.brand_uuid"];
          liked?: parameters["rowFilter.would_work_with.liked"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["would_work_with"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** would_work_with */
          would_work_with?: definitions["would_work_with"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.would_work_with.id"];
          created_at?: parameters["rowFilter.would_work_with.created_at"];
          uuid?: parameters["rowFilter.would_work_with.uuid"];
          user_uuid?: parameters["rowFilter.would_work_with.user_uuid"];
          brand_uuid?: parameters["rowFilter.would_work_with.brand_uuid"];
          liked?: parameters["rowFilter.would_work_with.liked"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.would_work_with.id"];
          created_at?: parameters["rowFilter.would_work_with.created_at"];
          uuid?: parameters["rowFilter.would_work_with.uuid"];
          user_uuid?: parameters["rowFilter.would_work_with.user_uuid"];
          brand_uuid?: parameters["rowFilter.would_work_with.brand_uuid"];
          liked?: parameters["rowFilter.would_work_with.liked"];
        };
        body: {
          /** would_work_with */
          would_work_with?: definitions["would_work_with"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  bookmarks: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
  };
  brands: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid: string;
    website?: string;
    industry?: string;
    location?: string;
    founded?: string;
    size?: string;
    description?: string;
    name?: string;
    thumbnail?: string;
  };
  comment_like: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `comments.uuid`.<fk table='comments' column='uuid'/>
     */
    comment_uuid?: string;
  };
  comments: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    text?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `comments.uuid`.<fk table='comments' column='uuid'/>
     */
    parent_uuid?: string;
  };
  compensations: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    amount?: number;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `brands.uuid`.<fk table='brands' column='uuid'/>
     */
    brand_uuid?: string;
    verified?: boolean;
    type?: string;
  };
  helpfuls: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `reviews.uuid`.<fk table='reviews' column='uuid'/>
     */
    review_uuid?: string;
    was_helpful?: boolean;
  };
  new_feature_requests: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    text?: string;
    uuid?: string;
  };
  new_topic_request: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    text?: string;
  };
  /** The type of content the creator makes */
  niches: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    name: string;
    uuid?: string;
  };
  notifications: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    viewed?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post_uuid?: string;
  };
  post_like: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post_uuid?: string;
  };
  posts: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    title?: string;
    description?: string;
    type?: string;
    views?: number;
    options?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user: string;
    image?: string;
    url?: string;
    /**
     * Note:
     * This is a Foreign Key to `topics.uuid`.<fk table='topics' column='uuid'/>
     */
    topic?: string;
  };
  posts_related_brands: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post?: string;
    /**
     * Note:
     * This is a Foreign Key to `brands.uuid`.<fk table='brands' column='uuid'/>
     */
    brand?: string;
  };
  reviews: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `brands.uuid`.<fk table='brands' column='uuid'/>
     */
    brand: string;
    overrall_rating?: number;
    title?: string;
    pros?: string;
    cons?: string;
    compensation_rating?: number;
    easy_to_work_with_rating?: number;
    responsive_rating?: number;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user: string;
    compensation?: string;
    received_free_product?: boolean;
    equity?: string;
    number_of_followers?: number;
    number_of_posts?: number;
  };
  topics: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    name: string;
    uuid: string;
  };
  user_niches: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user?: string;
    /**
     * Note:
     * This is a Foreign Key to `niches.uuid`.<fk table='niches' column='uuid'/>
     */
    niche?: string;
  };
  user_topics: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    /**
     * Note:
     * This is a Foreign Key to `topics.uuid`.<fk table='topics' column='uuid'/>
     */
    topic?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user?: string;
  };
  users: {
    uuid: string;
    created_at?: string;
    email: string;
    screen_name?: string;
    verified?: boolean;
    follower_count?: number;
    location?: string;
    bio?: string;
    years_of_exp?: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    enable_push_notifications?: boolean;
    push_blind_updates?: boolean;
    push_new_messages?: boolean;
    push_new_comments?: boolean;
    push_posts?: boolean;
  };
  votes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid?: string;
    choice?: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.uuid`.<fk table='posts' column='uuid'/>
     */
    post_uuid?: string;
  };
  would_work_with: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    created_at?: string;
    uuid: string;
    /**
     * Note:
     * This is a Foreign Key to `users.uuid`.<fk table='users' column='uuid'/>
     */
    user_uuid: string;
    /**
     * Note:
     * This is a Foreign Key to `brands.uuid`.<fk table='brands' column='uuid'/>
     */
    brand_uuid: string;
    liked?: boolean;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** bookmarks */
  "body.bookmarks": definitions["bookmarks"];
  "rowFilter.bookmarks.id": string;
  "rowFilter.bookmarks.created_at": string;
  "rowFilter.bookmarks.uuid": string;
  "rowFilter.bookmarks.post_uuid": string;
  "rowFilter.bookmarks.user_uuid": string;
  /** brands */
  "body.brands": definitions["brands"];
  "rowFilter.brands.id": string;
  "rowFilter.brands.created_at": string;
  "rowFilter.brands.uuid": string;
  "rowFilter.brands.website": string;
  "rowFilter.brands.industry": string;
  "rowFilter.brands.location": string;
  "rowFilter.brands.founded": string;
  "rowFilter.brands.size": string;
  "rowFilter.brands.description": string;
  "rowFilter.brands.name": string;
  "rowFilter.brands.thumbnail": string;
  /** comment_like */
  "body.comment_like": definitions["comment_like"];
  "rowFilter.comment_like.id": string;
  "rowFilter.comment_like.created_at": string;
  "rowFilter.comment_like.uuid": string;
  "rowFilter.comment_like.user_uuid": string;
  "rowFilter.comment_like.comment_uuid": string;
  /** comments */
  "body.comments": definitions["comments"];
  "rowFilter.comments.id": string;
  "rowFilter.comments.created_at": string;
  "rowFilter.comments.uuid": string;
  "rowFilter.comments.text": string;
  "rowFilter.comments.post_uuid": string;
  "rowFilter.comments.user_uuid": string;
  "rowFilter.comments.parent_uuid": string;
  /** compensations */
  "body.compensations": definitions["compensations"];
  "rowFilter.compensations.id": string;
  "rowFilter.compensations.created_at": string;
  "rowFilter.compensations.uuid": string;
  "rowFilter.compensations.amount": string;
  "rowFilter.compensations.user_uuid": string;
  "rowFilter.compensations.brand_uuid": string;
  "rowFilter.compensations.verified": string;
  "rowFilter.compensations.type": string;
  /** helpfuls */
  "body.helpfuls": definitions["helpfuls"];
  "rowFilter.helpfuls.id": string;
  "rowFilter.helpfuls.created_at": string;
  "rowFilter.helpfuls.uuid": string;
  "rowFilter.helpfuls.user_uuid": string;
  "rowFilter.helpfuls.review_uuid": string;
  "rowFilter.helpfuls.was_helpful": string;
  /** new_feature_requests */
  "body.new_feature_requests": definitions["new_feature_requests"];
  "rowFilter.new_feature_requests.id": string;
  "rowFilter.new_feature_requests.created_at": string;
  "rowFilter.new_feature_requests.user_uuid": string;
  "rowFilter.new_feature_requests.text": string;
  "rowFilter.new_feature_requests.uuid": string;
  /** new_topic_request */
  "body.new_topic_request": definitions["new_topic_request"];
  "rowFilter.new_topic_request.id": string;
  "rowFilter.new_topic_request.created_at": string;
  "rowFilter.new_topic_request.uuid": string;
  "rowFilter.new_topic_request.user_uuid": string;
  "rowFilter.new_topic_request.text": string;
  /** niches */
  "body.niches": definitions["niches"];
  "rowFilter.niches.id": string;
  "rowFilter.niches.created_at": string;
  "rowFilter.niches.name": string;
  "rowFilter.niches.uuid": string;
  /** notifications */
  "body.notifications": definitions["notifications"];
  "rowFilter.notifications.id": string;
  "rowFilter.notifications.created_at": string;
  "rowFilter.notifications.uuid": string;
  "rowFilter.notifications.viewed": string;
  "rowFilter.notifications.user_uuid": string;
  "rowFilter.notifications.post_uuid": string;
  /** post_like */
  "body.post_like": definitions["post_like"];
  "rowFilter.post_like.id": string;
  "rowFilter.post_like.created_at": string;
  "rowFilter.post_like.uuid": string;
  "rowFilter.post_like.user_uuid": string;
  "rowFilter.post_like.post_uuid": string;
  /** posts */
  "body.posts": definitions["posts"];
  "rowFilter.posts.id": string;
  "rowFilter.posts.created_at": string;
  "rowFilter.posts.title": string;
  "rowFilter.posts.description": string;
  "rowFilter.posts.type": string;
  "rowFilter.posts.views": string;
  "rowFilter.posts.options": string;
  "rowFilter.posts.uuid": string;
  "rowFilter.posts.user": string;
  "rowFilter.posts.image": string;
  "rowFilter.posts.url": string;
  "rowFilter.posts.topic": string;
  /** posts_related_brands */
  "body.posts_related_brands": definitions["posts_related_brands"];
  "rowFilter.posts_related_brands.id": string;
  "rowFilter.posts_related_brands.created_at": string;
  "rowFilter.posts_related_brands.uuid": string;
  "rowFilter.posts_related_brands.post": string;
  "rowFilter.posts_related_brands.brand": string;
  /** reviews */
  "body.reviews": definitions["reviews"];
  "rowFilter.reviews.id": string;
  "rowFilter.reviews.created_at": string;
  "rowFilter.reviews.uuid": string;
  "rowFilter.reviews.brand": string;
  "rowFilter.reviews.overrall_rating": string;
  "rowFilter.reviews.title": string;
  "rowFilter.reviews.pros": string;
  "rowFilter.reviews.cons": string;
  "rowFilter.reviews.compensation_rating": string;
  "rowFilter.reviews.easy_to_work_with_rating": string;
  "rowFilter.reviews.responsive_rating": string;
  "rowFilter.reviews.user": string;
  "rowFilter.reviews.compensation": string;
  "rowFilter.reviews.received_free_product": string;
  "rowFilter.reviews.equity": string;
  "rowFilter.reviews.number_of_followers": string;
  "rowFilter.reviews.number_of_posts": string;
  /** topics */
  "body.topics": definitions["topics"];
  "rowFilter.topics.id": string;
  "rowFilter.topics.created_at": string;
  "rowFilter.topics.name": string;
  "rowFilter.topics.uuid": string;
  /** user_niches */
  "body.user_niches": definitions["user_niches"];
  "rowFilter.user_niches.id": string;
  "rowFilter.user_niches.created_at": string;
  "rowFilter.user_niches.user": string;
  "rowFilter.user_niches.niche": string;
  /** user_topics */
  "body.user_topics": definitions["user_topics"];
  "rowFilter.user_topics.id": string;
  "rowFilter.user_topics.created_at": string;
  "rowFilter.user_topics.topic": string;
  "rowFilter.user_topics.user": string;
  /** users */
  "body.users": definitions["users"];
  "rowFilter.users.uuid": string;
  "rowFilter.users.created_at": string;
  "rowFilter.users.email": string;
  "rowFilter.users.screen_name": string;
  "rowFilter.users.verified": string;
  "rowFilter.users.follower_count": string;
  "rowFilter.users.location": string;
  "rowFilter.users.bio": string;
  "rowFilter.users.years_of_exp": string;
  "rowFilter.users.id": string;
  "rowFilter.users.enable_push_notifications": string;
  "rowFilter.users.push_blind_updates": string;
  "rowFilter.users.push_new_messages": string;
  "rowFilter.users.push_new_comments": string;
  "rowFilter.users.push_posts": string;
  /** votes */
  "body.votes": definitions["votes"];
  "rowFilter.votes.id": string;
  "rowFilter.votes.created_at": string;
  "rowFilter.votes.uuid": string;
  "rowFilter.votes.choice": string;
  "rowFilter.votes.user_uuid": string;
  "rowFilter.votes.post_uuid": string;
  /** would_work_with */
  "body.would_work_with": definitions["would_work_with"];
  "rowFilter.would_work_with.id": string;
  "rowFilter.would_work_with.created_at": string;
  "rowFilter.would_work_with.uuid": string;
  "rowFilter.would_work_with.user_uuid": string;
  "rowFilter.would_work_with.brand_uuid": string;
  "rowFilter.would_work_with.liked": string;
}

export interface operations {}

export interface external {}
